@page "/product/{id:int}"
@using BagarBasse.Client.Services.ProductService
@using BagarBasse.Shared.Models
@using BagarBasse.Client.Services.CartService
@inject ICartService CartService
@inject IProductService ProductService

@if (_product == null)
{
    <div class="w-100 d-flex justify-content-center"><span class="fs-1 font-gatefold-demi text-center py-5">@_message</span></div>
}
else
{
    <div class="container px-4 px-lg-5 my-5 font-ambit py-5">
        <div class="row gx-4 gx-lg-5 align-items-center">
            <div class="col-md-6">
                <div class="card-img-top mb-5 mb-md-0 product-image-wrapper">
                    <img class="card-img-top mb-5 mb-md-0 product-image rounded-4" src="@_product.Image" alt="..."/>
                </div>
            </div>
            <div class="col-md-6">
                <h1 class="display-5 fw-bolder font-gatefold-demi">@_product.Title</h1>
                <div class="fs-5 mb-5 pt-3">

                    @if (GetSelectedVariant() != null)
                    {
                        @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                        {
                            <span class="text-decoration-line-through">
                                @GetSelectedVariant().OriginalPrice KR
                            </span>
                            <br/>   
                        }
                        <span>
                            @GetSelectedVariant().Price KR
                        </span>
                    }
                    @if (_product.Variants != null)
                    {
                        <div class="mt-3">
                            <select class="form-select border border-1 border-dark" @bind="currentTypeId" disabled="@(_product.Variants.Count==1)">
                                @foreach (var variant in _product.Variants)
                                {
                                    <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                }
                            </select>
                        </div>
                    }
                </div>
                <hr />
                <span class="fw-bold">Beskrivning:</span>
                <p class="">@_product.Description</p>
                <span class="fw-bold">Ingredienser:</span>
                <p class="">@_product.Ingredients</p>
                
                <div class="d-flex pt-3">
                    <button class="btn btn-pastel-yellow flex-shrink-0 text-dark fw-bold" type="button" @onclick="AddToCart">
                        <i class="bi-cart me-1"></i>
                        Lägg till i varukorg
                    </button>
                </div>
            </div>
        </div>
    </div>
}


@code {

    private Product? _product = null;
    private string _message;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _message = "Loading Products...";
        var result = await ProductService.GetProductAsync(Id);

        if (!result.IsSuccessStatusCode)
        {
            _message = "Produkten hittades inte";
        }
        else
        {
            _product = await result.Content.ReadFromJsonAsync<Product>();
            if (_product.Variants.Count > 0)
            {
                currentTypeId = _product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = _product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();
        var cartItem = new CartItem
        {
            ProductId = productVariant.ProductId,
            ProductTypeId = productVariant.ProductTypeId
        };
        await CartService.AddToCart(cartItem);
    }

}