@page "/register"
@using Microsoft.AspNetCore.Components
@using BagarBasse.Shared.Models
@using BagarBasse.Client.Services.AuthService
@inject IAuthService AuthService
<PageTitle> Registration</PageTitle>

<div class="d-flex justify-content-center align-items-center register-form-wrapper my-5 flex-column font-ambit">
    <h3 class="fs-1 font-gatefold-demi text-center pb-5">Registrera dig</h3>
    <div class="register-form">
        <EditForm Model="user" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator/>
            <div class="mb-3">
                <div class="form-floating">
                    <InputText id="email" @bind-Value="user.Email" class="form-control" placeholder="name@example.com"></InputText>
                    <label for="email">Email</label>
                </div>
                <ValidationMessage For="@(() => user.Email)"/>
            </div>
            <div class="mb-4">
                <div class="form-floating">
                    <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" placeholder="Password"></InputText>
                    <label for="email">Password</label>
                </div>
                <ValidationMessage For="@(() => user.Password)"/>
            </div>
            <div class="mb-4">
                <div class="form-floating">
                    <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" placeholder="Password"></InputText>
                    <label for="confirmPassword">Repeat Password</label>
                </div>
                <ValidationMessage For="@(() => user.ConfirmPassword)"/>
            </div>
            <button class="btn btn-pastel-pink w-100 fw-bold fs-5 p-2">Registrera Konto</button>
            <div class="@_messageCss">
                <span>@_message</span>
            </div>
        </EditForm>
    </div>
</div>

@code {
    UserRegister user = new UserRegister();

    string _message = string.Empty;
    string _messageCss = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
    //_message = result.Message;
    //if (result.Success)
    //{
    //    _messageCss = "text-success";
    //}
    //else
    //{
    //    _messageCss = "text-danger";
    //}
    }

}